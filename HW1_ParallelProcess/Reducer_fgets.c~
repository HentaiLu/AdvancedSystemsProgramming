#include <stdio.h>
#include <string.h>

#define MAX_LINE_SIZE   20
#define MAX_DEPTH_LIST  50
#define NOT_FOUND       0
#define FOUND           1

void CheckString_and_Add(char*);
void Print_PrevWords(void);

char Word_List[MAX_DEPTH_LIST][MAX_LINE_SIZE];
char *NextWord;
int Word_Count[MAX_DEPTH_LIST];
int Curr_List_Index = 0;
int Index;

int main()
{
    char NextLine[MAX_LINE_SIZE];
    char *NewLine_Char = "\n";
    FILE *FileDesc;
    char *FileName;
    char Prev_StartChar, Curr_StartChar;
    
    FileDesc = fopen("ASP_HW1_Intermediate.txt", "r");
    if (FileDesc == NULL)
    {
        printf("Error Opening File in Mapper");
        return 0;
    }
    
    scanf(" %[^\n]",NextLine);
    
    while(fgets(NextLine, MAX_LINE_SIZE, FileDesc)!= NULL)
    {
        if (!strcmp(NextLine, NewLine_Char))
            continue;
            
        NextWord = strtok(strtok(NextLine,"("), ",");
        if ( Prev_StartChar != NextWord[0])
            Print_PrevWords();
        CheckString_and_Add(NextWord);
        Prev_StartChar = NextWord[0];
        /*
            write(fd[1], "( %s, 1)\n", NextLine);
        */
    }
    
    Print_PrevWords();
    fclose(FileDesc);
}

void CheckString_and_Add(char* Word)
{
    int i=0;
    int Word_Found = NOT_FOUND;
    
    for(i=0; i<Curr_List_Index; i++)
    {
        if (!strcmp(Word,Word_List[i]))
        {
            //Word_Count[i]++;
            Word_Count[i] = Word_Count[i]+1;
            Word_Found = FOUND;
           // printf("For Word *%s*, WORF FOUND @ %d \n",Word, i);
            break;
        }

    }
    if (Word_Found == NOT_FOUND)
    {
        //printf("Word *%s*, WORD NOT FOUND \n",Word);
        strcpy(Word_List[Curr_List_Index], Word);
        //puts(Word_List[Curr_List_Index]);
        Curr_List_Index++;
    }
    
}

void Print_PrevWords(void)
{
    int i = 0;
    for( i=0; i<Curr_List_Index; i++)
    {
        printf("(%s, %d)\n", Word_List[i], Word_Count[i]+1);
        
        //fputs(Word_List[i];
        Word_Count[i]=0;
    }
    Curr_List_Index = 0;
}




